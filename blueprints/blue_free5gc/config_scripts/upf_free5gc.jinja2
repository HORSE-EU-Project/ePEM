{% if confvar.upfversion == "1.0.3" %}
{# upf configuration version used by Free5GC 3.2.0 #}
version: 1.0.3
description: UPF initial local configuration

# The listen IP and nodeID of the N4 interface on this UPF (Can't set to 0.0.0.0)
pfcp:
  {% for node in confvar.pfcp %}
  addr: {{ node }}   # IP addr for listening
  nodeID: {{ node }} # External IP or FQDN can be reached
  retransTimeout: 1s # retransmission timeout
  maxRetrans: 3 # the max number of retransmission
  {% endfor %}

gtpu:
  forwarder: gtp5g
  # The IP list of the N3/N9 interfaces on this UPF
  # If there are multiple connection, set addr to 0.0.0.0 or list all the addresses
  ifList:
    {% for node in confvar.gtpu %}
    {% if confvar.upftype != "core" %}
    - addr: {{ node }}
      type: N3
    {% endif %}
    - addr: {{ node }}
      type: N9
    {% endfor %}

# The DNN list supported by UPF
dnnList:
  {% for elem in confvar.dnn_list %}
  - dnn: {{ elem.dnn }} # Data Network Name
    #cidr: 60.60.0.0/24 # Classless Inter-Domain Routing for assigned IPv4 pool of UE
    cidr: {{ elem.pools[0].cidr }} # Classless Inter-Domain Routing for assigned IPv4 pool of UE
    # [optional] dnn_list[*].natifname
    # natifname: eth0
  {% endfor %}

logger: # log output setting
  enable: true # true or false
  level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
  reportCaller: false # enable the caller report or not, value: true or false

{% elif confvar.upfversion == "1.0.0" %}

info:
  version: 1.0.0
  description: UPF configuration

configuration:
  # the kind of log output
    # debugLevel: how detailed to output, value: trace, debug, info, warn, error, fatal, panic
    # ReportCaller: enable the caller report or not, value: true or false
  debugLevel: info
  ReportCaller: false

  # packetBufferHoldTime should be longer than Paging retry-out time of AMF.
  # unit: seconds
  packetBufferHoldTime: 30

  # The IP list of the N4 interface on this UPF (Can't set to 0.0.0.0)
  pfcp:
    #- addr: 127.0.0.8
    {% for node in confvar.pfcp %}
    - addr: {{ node }}
    {% endfor %}

  # The IP list of the N3/N9 interfaces on this UPF
  # If there are multiple connection, set addr to 0.0.0.0 or list all the addresses
  gtpu:
    #- addr: 127.0.0.8
    {% for node in confvar.gtpu %}
    - addr: {{ node }}
    {% endfor %}
    # [optional] gtpu.name
    # - name: upf.5gc.nctu.me
    # [optional] gtpu.ifname
    # - ifname: gtpif

  # The DNN list supported by UPF
  dnn_list:
    #- dnn: internet # Data Network Name
    {% for elem in confvar.dnn_list %}
    - dnn: {{ elem.dnn }} # Data Network Name
      #cidr: 60.60.0.0/24 # Classless Inter-Domain Routing for assigned IPv4 pool of UE
      cidr: {{ elem.pools[0].cidr }} # Classless Inter-Domain Routing for assigned IPv4 pool of UE
      # [optional] dnn_list[*].natifname
      # natifname: eth0
    {% endfor %}

{% endif %}