---
- hosts: all 
  become: yes
  gather_facts: no
  tasks:
   - name: Make the Swap inactive
     command: swapoff -a
   - name: Remove Swap entry from /etc/fstab.
     lineinfile:
       dest: /etc/fstab
       regexp: swap
       state: absent
   - name: Create a empty file for containerd module.
     copy:
       content: ""
       dest: /etc/modules-load.d/containerd.conf
       force: no
   - name: Configure module for containerd.
     blockinfile:
       path: /etc/modules-load.d/containerd.conf 
       block: |
            overlay
            br_netfilter
   - name: Create a empty file for kubernetes sysctl params.
     copy:
       content: ""
       dest: /etc/sysctl.d/kubernetes.conf
       force: no
   - name: Configure sysctl params for Kubernetes.
     lineinfile:
       path: /etc/sysctl.d/kubernetes.conf
       line: "{{ item }}"
     with_items:
       - 'net.bridge.bridge-nf-call-iptables  = 1'
       - 'net.ipv4.ip_forward                 = 1'
       - 'net.bridge.bridge-nf-call-ip6tables = 1'
   - name: Apply sysctl params without reboot.
     command: sysctl --system
   - name: Installing Prerequisites for Kubernetes
     apt: 
       name:
         - apt-transport-https
         - ca-certificates
         - curl
         - gnupg2
         - vim
         - software-properties-common
       state: present
       update_cache: yes
   - name: Add Dockerâ€™s official GPG key
     apt_key:
       url: https://download.docker.com/linux/ubuntu/gpg
       state: present
   - name: Add Docker Repository
     apt_repository:
       repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable
       state: present
       filename: docker
       update_cache: yes
   - name: Install containerd.
     apt: 
       name:
         - containerd.io=1.6.21-1
         - docker-ce=5:24.0.1-1~ubuntu.22.04~jammy
         - docker-ce-cli
       state: present
   - name: Hold containerd
     ansible.builtin.dpkg_selections:
       name: containerd.io
       selection: hold
   - name: Hold docker-ce
     ansible.builtin.dpkg_selections:
       name: docker-ce
       selection: hold
   - name: Hold docker-ce-cli
     ansible.builtin.dpkg_selections:
       name: docker-ce-cli
       selection: hold
   - name: Create Docker etc directory
     file:
       path: /etc/docker
       state: directory
   - name: Configure containerd.
     file:
       path: /etc/containerd
       state: directory
   - name: Configure containerd.
     shell: /usr/bin/containerd config default > /etc/containerd/config.toml
   - name: Enable SystemdCgroup.
     shell: sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
   - name: Enable containerd service, and start it.
     systemd: 
       name: containerd
       state: restarted
       enabled: yes
       daemon-reload: yes
   - name: Enable Docker service, and start it.
     systemd:
       name: docker
       state: restarted
       enabled: yes
       daemon-reload: yes
   - name: Add Google official GPG key
     apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
       state: present
   - name: Add Kubernetes Repository
     apt_repository:
       repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
       state: present
       filename: kubernetes
       mode: 0600
   - name: Installing Kubernetes Cluster Packages.
     apt: 
       name:
         - kubeadm=1.24.14-00
         - kubectl=1.24.14-00
         - kubelet=1.24.14-00
       state: present
   - name: Hold kubeadm
     ansible.builtin.dpkg_selections:
       name: kubeadm
       selection: hold
   - name: Hold kubectl
     ansible.builtin.dpkg_selections:
       name: kubectl
       selection: hold
   - name: Hold kubelet
     ansible.builtin.dpkg_selections:
       name: kubelet
       selection: hold
   - name: Enable service kubelet, and enable persistently
     service: 
       name: kubelet
       enabled: yes
   - name: Reboot all the kubernetes nodes.
     reboot:
       post_reboot_delay: 20
       reboot_timeout: 60
       connect_timeout: 180
       test_command: uptime
   - pause: seconds=20
...
