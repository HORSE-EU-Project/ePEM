# generated by datamodel-codegen:
#   filename:  Free5GC_K8s_blue.json
#   timestamp: 2022-10-09T14:18:50+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional, Literal

from pydantic import BaseModel, Field


class Category(Enum):
    field_4G = '4G'
    field_5G = '5G'


class Wan(BaseModel):
    id: str = Field(
        ..., description='name of the topology network to be used as wide-area network'
    )
    net_ip: Optional[str] = Field(None, description='IPv4 cidr of the wan network')


class Vim(BaseModel):
    name: str = Field(..., description='name of the VIM (as onboarded into the NFVO)')
    tenant: str = Field(
        ..., description='tenant name of the VIM (as onboarded into the NFVO)'
    )
    tacs: List = Field(
        ...,
        description='list of per-tracking area code parameters to instantiate the Blueprint',
    )
    wan: Wan = Field(
        ...,
        description='parameters of the wide-area network to connect services running onto different VIMs',
    )
    mgt: str = Field(
        ..., description='name of the topology network to be used for management'
    )
    sgi: str = Field(
        ...,
        description='name of the topology network to be used for UE internet connectivity',
    )


class Request4G5GBlueprintInstanceFree5Gc(BaseModel):
    type: Literal["Free5GC"] = Field(
        None, description='type of the requested Blueprint'
    )
    callbackURL: Optional[str] = Field(
        None,
        description='url that will be used to notify when the topology terraforming ends',
    )
    plmn: str = Field(..., description='PLMN identifier of the mobile network')
    config: Dict[str, Any] = Field(
        ...,
        description='parameters for the day2 configuration of the Blueprint instance',
    )
    vims: List[Vim] = Field(
        ...,
        description='list of VIMs to be used for the Blueprint instantiation',
        min_items=1,
    )
